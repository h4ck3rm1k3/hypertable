Running with trace output on.
(0):  PROJECT(Project )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(3):  SET(CMAKE_SYSTEM Linux-2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(4):  SET(CMAKE_SYSTEM_NAME Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(5):  SET(CMAKE_SYSTEM_VERSION 2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(6):  SET(CMAKE_SYSTEM_PROCESSOR i686 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(8):  SET(CMAKE_HOST_SYSTEM Linux-2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(9):  SET(CMAKE_HOST_SYSTEM_NAME Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(10):  SET(CMAKE_HOST_SYSTEM_VERSION 2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(11):  SET(CMAKE_HOST_SYSTEM_PROCESSOR i686 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(13):  SET(CMAKE_CROSSCOMPILING FALSE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(15):  SET(CMAKE_SYSTEM_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(1):  SET(CMAKE_C_COMPILER /usr/bin/gcc )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(2):  SET(CMAKE_C_COMPILER_ARG1  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(3):  SET(CMAKE_C_COMPILER_ID GNU )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(4):  SET(CMAKE_C_PLATFORM_ID Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(6):  SET(CMAKE_AR /usr/bin/ar )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(7):  SET(CMAKE_RANLIB /usr/bin/ranlib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(8):  SET(CMAKE_LINKER /usr/bin/ld )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(9):  SET(CMAKE_COMPILER_IS_GNUCC 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(10):  SET(CMAKE_C_COMPILER_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(11):  SET(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(12):  SET(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(13):  IF(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(18):  SET(CMAKE_C_COMPILER_ENV_VAR CC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(20):  IF(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(23):  SET(CMAKE_C_COMPILER_ID_RUN 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(24):  SET(CMAKE_C_SOURCE_FILE_EXTENSIONS c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(25):  SET(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(26):  SET(CMAKE_C_LINKER_PREFERENCE 10 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(29):  SET(CMAKE_C_SIZEOF_DATA_PTR 4 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(30):  SET(CMAKE_C_COMPILER_ABI ELF )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(32):  IF(CMAKE_C_SIZEOF_DATA_PTR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(33):  SET(CMAKE_SIZEOF_VOID_P ${CMAKE_C_SIZEOF_DATA_PTR} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(36):  IF(CMAKE_C_COMPILER_ABI )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(37):  SET(CMAKE_INTERNAL_PLATFORM_ABI ${CMAKE_C_COMPILER_ABI} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(40):  SET(CMAKE_C_HAS_ISYSROOT  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(43):  SET(CMAKE_C_IMPLICIT_LINK_LIBRARIES c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(44):  SET(CMAKE_C_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/i686-linux-gnu/4.4.5;/usr/lib;/lib;/usr/lib/i686-linux-gnu )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(1):  SET(CMAKE_CXX_COMPILER /usr/bin/c++ )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(2):  SET(CMAKE_CXX_COMPILER_ARG1  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(3):  SET(CMAKE_CXX_COMPILER_ID GNU )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(4):  SET(CMAKE_CXX_PLATFORM_ID Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(6):  SET(CMAKE_AR /usr/bin/ar )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(7):  SET(CMAKE_RANLIB /usr/bin/ranlib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(8):  SET(CMAKE_LINKER /usr/bin/ld )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(9):  SET(CMAKE_COMPILER_IS_GNUCXX 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(10):  SET(CMAKE_CXX_COMPILER_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(11):  SET(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(12):  SET(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(13):  IF(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(18):  SET(CMAKE_CXX_COMPILER_ENV_VAR CXX )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(20):  IF(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(23):  SET(CMAKE_CXX_COMPILER_ID_RUN 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(24):  SET(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(25):  SET(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(26):  SET(CMAKE_CXX_LINKER_PREFERENCE 30 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(27):  SET(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(30):  SET(CMAKE_CXX_SIZEOF_DATA_PTR 4 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(31):  SET(CMAKE_CXX_COMPILER_ABI ELF )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(33):  IF(CMAKE_CXX_SIZEOF_DATA_PTR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(34):  SET(CMAKE_SIZEOF_VOID_P ${CMAKE_CXX_SIZEOF_DATA_PTR} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(37):  IF(CMAKE_CXX_COMPILER_ABI )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(38):  SET(CMAKE_INTERNAL_PLATFORM_ABI ${CMAKE_CXX_COMPILER_ABI} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(41):  SET(CMAKE_CXX_HAS_ISYSROOT  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(44):  SET(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES stdc++;m;c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(45):  SET(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/i686-linux-gnu/4.4.5;/usr/lib;/lib;/usr/lib/i686-linux-gnu )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(24):  SET(APPLE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(25):  SET(UNIX )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(26):  SET(CYGWIN )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(27):  SET(WIN32 )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(31):  INCLUDE(CMakeGenericSystem )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(15):  SET(CMAKE_SHARED_LIBRARY_C_FLAGS  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(16):  SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(17):  SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(18):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(19):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(20):  SET(CMAKE_INCLUDE_FLAG_C -I )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(21):  SET(CMAKE_INCLUDE_FLAG_C_SEP  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(22):  SET(CMAKE_LIBRARY_PATH_FLAG -L )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(23):  SET(CMAKE_LIBRARY_PATH_TERMINATOR  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(24):  SET(CMAKE_LINK_LIBRARY_FLAG -l )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(26):  SET(CMAKE_LINK_LIBRARY_SUFFIX  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(27):  SET(CMAKE_STATIC_LIBRARY_PREFIX lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(28):  SET(CMAKE_STATIC_LIBRARY_SUFFIX .a )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(29):  SET(CMAKE_SHARED_LIBRARY_PREFIX lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(30):  SET(CMAKE_SHARED_LIBRARY_SUFFIX .so )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(31):  SET(CMAKE_EXECUTABLE_SUFFIX  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(32):  SET(CMAKE_DL_LIBS dl )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(34):  SET(CMAKE_FIND_LIBRARY_PREFIXES lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(35):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(38):  SET_PROPERTY(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(40):  SET(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(43):  SET(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(45):  IF(CMAKE_GENERATOR MATCHES Makefiles )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(46):  SET(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(49):  MARK_AS_ADVANCED(CMAKE_COLOR_MAKEFILE )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(50):  IF(DEFINED CMAKE_RULE_MESSAGES )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(59):  IF(NOT DEFINED CMAKE_INSTALL_PREFIX )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(64):  IF(CMAKE_HOST_UNIX )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(65):  SET(CMAKE_INSTALL_PREFIX /usr/local CACHE PATH Install path prefix, prepended onto install directories. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(87):  MARK_AS_ADVANCED(CMAKE_SKIP_RPATH CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(34):  SET(CMAKE_SYSTEM_INFO_FILE Platform/${CMAKE_SYSTEM_NAME} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(36):  INCLUDE(${CMAKE_SYSTEM_INFO_FILE} OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(1):  SET(CMAKE_DL_LIBS dl )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(2):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(3):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(4):  SET(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(5):  SET(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG -Wl,-soname, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(6):  SET(CMAKE_EXE_EXPORTS_C_FLAG -Wl,--export-dynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(10):  SET(CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME 1 )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(16):  FOREACH(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(29):  IF(DEFINED CMAKE_INSTALL_SO_NO_EXE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(32):  SET(CMAKE_INSTALL_SO_NO_EXE ${CMAKE_INSTALL_SO_NO_EXE} CACHE INTERNAL Install .so files without execute permission. )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(48):  INCLUDE(Platform/UnixPaths )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(20):  IF(__UNIX_PATHS_INCLUDED )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(23):  SET(__UNIX_PATHS_INCLUDED 1 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(25):  SET(UNIX 1 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(29):  GET_FILENAME_COMPONENT(_CMAKE_INSTALL_DIR ${CMAKE_ROOT} PATH )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(30):  GET_FILENAME_COMPONENT(_CMAKE_INSTALL_DIR ${_CMAKE_INSTALL_DIR} PATH )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(34):  LIST(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local /usr / ${_CMAKE_INSTALL_DIR} ${CMAKE_INSTALL_PREFIX} )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(46):  LIST(APPEND CMAKE_SYSTEM_INCLUDE_PATH /usr/include/w32api /usr/X11R6/include /usr/include/X11 /opt/local/include /usr/pkg/include /opt/csw/include /opt/include /usr/openwin/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(59):  LIST(APPEND CMAKE_SYSTEM_LIBRARY_PATH /usr/lib/w32api /usr/X11R6/lib /usr/lib/X11 /opt/local/lib /usr/pkg/lib /opt/csw/lib /opt/lib /usr/openwin/lib )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(72):  LIST(APPEND CMAKE_SYSTEM_PROGRAM_PATH /usr/pkg/bin )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(76):  LIST(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES /lib /usr/lib /usr/lib32 /usr/lib64 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(80):  LIST(APPEND CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(83):  LIST(APPEND CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(88):  SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(52):  IF(EXISTS /etc/debian_version )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(53):  SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(38):  IF(NOT _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(53):  IF(CMAKE_EXTRA_GENERATOR )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(63):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(64):  SET(CMAKE_SHARED_MODULE_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(65):  SET(CMAKE_SHARED_MODULE_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(69):  SET(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(23):  IF(UNIX )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(24):  SET(CMAKE_C_OUTPUT_EXTENSION .o )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(30):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(31):  INCLUDE(Compiler/${CMAKE_C_COMPILER_ID}-C OPTIONAL )
/usr/share/cmake-2.8/Modules/Compiler/GNU-C.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(19):  set(__COMPILER_GNU 1 )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(21):  macro(__compiler_gnu lang )
/usr/share/cmake-2.8/Modules/Compiler/GNU-C.cmake(2):  __compiler_gnu(C )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(23):  set(CMAKE_C_VERBOSE_FLAG -v )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_C_FLAGS -fPIC )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(25):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(28):  set(CMAKE_C_FLAGS_INIT  )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(29):  set(CMAKE_C_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(30):  set(CMAKE_C_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(31):  set(CMAKE_C_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(32):  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT -O2 -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(33):  set(CMAKE_C_CREATE_PREPROCESSED_SOURCE <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(34):  set(CMAKE_C_CREATE_ASSEMBLY_SOURCE <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(35):  if(NOT APPLE )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(36):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(34):  SET(CMAKE_BASE_NAME )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(35):  GET_FILENAME_COMPONENT(CMAKE_BASE_NAME ${CMAKE_C_COMPILER} NAME_WE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(36):  IF(CMAKE_COMPILER_IS_GNUCC )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(37):  SET(CMAKE_BASE_NAME gcc )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(42):  IF(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(43):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(44):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_C_COMPILER_ID}-C-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(46):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(47):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(53):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(54):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_C_COMPILER_ID}-C OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-C.cmake(1):  INCLUDE(Platform/Linux-GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(19):  set(__LINUX_COMPILER_GNU 1 )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(21):  macro(__linux_compiler_gnu lang )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-C.cmake(2):  __linux_compiler_gnu(C )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS -rdynamic )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(57):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(65):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(76):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(80):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(88):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(89):  SET(CMAKE_SHARED_MODULE_C_FLAGS ${CMAKE_SHARED_LIBRARY_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(90):  SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(93):  SET(CMAKE_C_FLAGS_INIT $ENV{CFLAGS} ${CMAKE_C_FLAGS_INIT} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(95):  IF(CMAKE_C_FLAGS_INIT STREQUAL   )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(96):  SET(CMAKE_C_FLAGS_INIT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(98):  SET(CMAKE_C_FLAGS ${CMAKE_C_FLAGS_INIT} CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(101):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(103):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(104):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(107):  SET(CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(109):  SET(CMAKE_C_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the compiler during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(111):  SET(CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the compiler during release builds (/MD /Ob1 /Oi /Ot /Oy /Gs will produce slightly less optimized but smaller files). )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(113):  SET(CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the compiler during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(117):  IF(CMAKE_C_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(123):  INCLUDE(CMakeCommonLanguageInclude )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(19):  SET(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(23):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(25):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(26):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(30):  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(33):  SET(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(36):  SET(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(39):  SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(43):  SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG ${CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(46):  SET(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ${CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(50):  SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE ${CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(53):  SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(57):  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG ${CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(60):  SET(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ${CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(64):  SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE ${CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(67):  SET(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(73):  SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(77):  SET(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(80):  SET(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} CACHE INTERNAL What is the target build tool cmake is generating for. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(84):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(153):  IF(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(154):  SET(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(159):  IF(NOT CMAKE_C_CREATE_SHARED_MODULE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(160):  SET(CMAKE_C_CREATE_SHARED_MODULE ${CMAKE_C_CREATE_SHARED_LIBRARY} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(165):  SET(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(166):  SET(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(167):  SET(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(170):  IF(NOT CMAKE_C_COMPILE_OBJECT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(171):  SET(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -o <OBJECT>   -c <SOURCE> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(175):  IF(NOT CMAKE_C_LINK_EXECUTABLE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(176):  SET(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(180):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(181):  SET(CMAKE_EXECUTABLE_RUNTIME_C_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(184):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(185):  SET(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(188):  IF(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(189):  SET(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(192):  MARK_AS_ADVANCED(CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(199):  SET(CMAKE_C_INFORMATION_LOADED 1 )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(23):  IF(UNIX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(24):  SET(CMAKE_CXX_OUTPUT_EXTENSION .o )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(30):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(31):  INCLUDE(Compiler/${CMAKE_CXX_COMPILER_ID}-CXX OPTIONAL )
/usr/share/cmake-2.8/Modules/Compiler/GNU-CXX.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(17):  return()
/usr/share/cmake-2.8/Modules/Compiler/GNU-CXX.cmake(2):  __compiler_gnu(CXX )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(23):  set(CMAKE_CXX_VERBOSE_FLAG -v )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(25):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(28):  set(CMAKE_CXX_FLAGS_INIT  )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(31):  set(CMAKE_CXX_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(32):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT -O2 -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(34):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(35):  if(NOT APPLE )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(36):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(34):  SET(CMAKE_BASE_NAME )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(35):  GET_FILENAME_COMPONENT(CMAKE_BASE_NAME ${CMAKE_CXX_COMPILER} NAME_WE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(37):  IF(CMAKE_COMPILER_IS_GNUCXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(38):  SET(CMAKE_BASE_NAME g++ )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(43):  IF(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(44):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(45):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_CXX_COMPILER_ID}-CXX-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(47):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(48):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(53):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(54):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_CXX_COMPILER_ID}-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-CXX.cmake(1):  INCLUDE(Platform/Linux-GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(17):  return()
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-CXX.cmake(2):  __linux_compiler_gnu(CXX )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS -rdynamic )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(56):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(64):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(75):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(79):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(87):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(88):  SET(CMAKE_SHARED_MODULE_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_CXX_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(93):  IF(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(97):  IF(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(101):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(105):  IF(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(106):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(109):  IF(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(110):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(113):  IF(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(114):  SET(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(117):  IF(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(118):  SET(CMAKE_EXE_EXPORTS_CXX_FLAG ${CMAKE_EXE_EXPORTS_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(121):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(122):  SET(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_SONAME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(125):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(126):  SET(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(129):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(130):  SET(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(133):  IF(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(134):  SET(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(137):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(138):  SET(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH ${CMAKE_SHARED_LIBRARY_LINK_C_WITH_RUNTIME_PATH} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(141):  IF(NOT CMAKE_INCLUDE_FLAG_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(142):  SET(CMAKE_INCLUDE_FLAG_CXX ${CMAKE_INCLUDE_FLAG_C} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(145):  IF(NOT CMAKE_INCLUDE_FLAG_SEP_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(146):  SET(CMAKE_INCLUDE_FLAG_SEP_CXX ${CMAKE_INCLUDE_FLAG_SEP_C} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(150):  IF(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(151):  SET(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS ${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(154):  IF(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(159):  FOREACH(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(174):  SET(CMAKE_CXX_FLAGS_INIT $ENV{CXXFLAGS} ${CMAKE_CXX_FLAGS_INIT} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(176):  IF(CMAKE_CXX_FLAGS_INIT STREQUAL   )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(177):  SET(CMAKE_CXX_FLAGS_INIT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(179):  SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS_INIT} CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(182):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(183):  SET(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(185):  SET(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the compiler during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(187):  SET(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the compiler during release builds (/MD /Ob1 /Oi /Ot /Oy /Gs will produce slightly less optimized but smaller files). )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(189):  SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the compiler during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(194):  IF(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(200):  INCLUDE(CMakeCommonLanguageInclude )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(19):  SET(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(23):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(25):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(26):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(30):  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(33):  SET(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(36):  SET(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(39):  SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(43):  SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG ${CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(46):  SET(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ${CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(50):  SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE ${CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(53):  SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(57):  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG ${CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(60):  SET(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ${CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(64):  SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE ${CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(67):  SET(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(73):  SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(77):  SET(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(80):  SET(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} CACHE INTERNAL What is the target build tool cmake is generating for. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(84):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(229):  IF(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(230):  SET(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(235):  IF(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(236):  SET(CMAKE_CXX_CREATE_SHARED_MODULE ${CMAKE_CXX_CREATE_SHARED_LIBRARY} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(242):  SET(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(243):  SET(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(244):  SET(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(247):  IF(NOT CMAKE_CXX_COMPILE_OBJECT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(248):  SET(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  <DEFINES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(252):  IF(NOT CMAKE_CXX_LINK_EXECUTABLE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(253):  SET(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(257):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_DEBUG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(266):  SET(CMAKE_CXX_INFORMATION_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(1):  cmake_minimum_required(VERSION 2.8 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(7):  SET(Boost_ADDITIONAL_VERSIONS 1.39 1.39.0 1.40 1.40.0 1.41 1.41.0 1.42 1.42.0 1.43 1.43.0 1.44 1.44.0 1.45 1.45.0 1.46 1.46.0 1.47 1.47.0 1.48 1.48.0 1.49 1.49.0 1.50 1.50.0 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(8):  FIND_PACKAGE(Boost 1.48 COMPONENTS date_time filesystem graph iostreams program_options regex serialization signals system thread wserialization REQUIRED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(195):  MACRO(_Boost_ADJUST_LIB_VARS basename )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(255):  FUNCTION(_Boost_COMPILER_DUMPVERSION _OUTPUT_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(271):  function(_Boost_MARK_COMPONENTS_FOUND _yes_or_no )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(286):  IF(NOT DEFINED Boost_USE_MULTITHREADED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(287):  SET(Boost_USE_MULTITHREADED TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(290):  if(Boost_FIND_VERSION_EXACT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(299):  set(_Boost_KNOWN_VERSIONS ${Boost_ADDITIONAL_VERSIONS} 1.41.0 1.41 1.40.0 1.40 1.39.0 1.39 1.38.0 1.38 1.37.0 1.37 1.36.1 1.36.0 1.36 1.35.1 1.35.0 1.35 1.34.1 1.34.0 1.34 1.33.1 1.33.0 1.33 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(303):  set(_boost_TEST_VERSIONS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(304):  if(Boost_FIND_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(305):  set(_Boost_FIND_VERSION_SHORT ${Boost_FIND_VERSION_MAJOR}.${Boost_FIND_VERSION_MINOR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(307):  foreach(version ${_Boost_KNOWN_VERSIONS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(310):  list(APPEND _boost_TEST_VERSIONS ${version} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(326):  set(Boost_ERROR_REASON )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(328):  SET(_boost_IN_CACHE TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(329):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(333):  if(Boost_VERSION AND Boost_FIND_COMPONENTS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(334):  math(EXPR _boost_maj ${Boost_VERSION} / 100000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(335):  math(EXPR _boost_min ${Boost_VERSION} / 100 % 1000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(336):  if(${_boost_maj}.${_boost_min} VERSION_LESS 1.35 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(341):  FOREACH(COMPONENT ${Boost_FIND_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(351):  IF(_boost_IN_CACHE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(353):  SET(Boost_FOUND TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(354):  FOREACH(COMPONENT ${Boost_FIND_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_DATE_TIME_LIBRARY_DEBUG AND Boost_DATE_TIME_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_DATE_TIME_LIBRARY_RELEASE AND NOT Boost_DATE_TIME_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_DATE_TIME_LIBRARY_DEBUG ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_DATE_TIME_LIBRARY ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_DATE_TIME_LIBRARIES ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_DATE_TIME_LIBRARY_DEBUG AND NOT Boost_DATE_TIME_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_DATE_TIME_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_DATE_TIME_LIBRARY ${Boost_DATE_TIME_LIBRARY} CACHE FILEPATH The Boost DATE_TIME library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_DATE_TIME_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_DATE_TIME_FOUND ON CACHE INTERNAL Whether the Boost DATE_TIME library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_DATE_TIME_LIBRARY Boost_DATE_TIME_LIBRARY_RELEASE Boost_DATE_TIME_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_FILESYSTEM_LIBRARY_DEBUG AND Boost_FILESYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_FILESYSTEM_LIBRARY_RELEASE AND NOT Boost_FILESYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_FILESYSTEM_LIBRARY_DEBUG ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_FILESYSTEM_LIBRARY ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_FILESYSTEM_LIBRARIES ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_FILESYSTEM_LIBRARY_DEBUG AND NOT Boost_FILESYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_FILESYSTEM_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_FILESYSTEM_LIBRARY ${Boost_FILESYSTEM_LIBRARY} CACHE FILEPATH The Boost FILESYSTEM library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_FILESYSTEM_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_FILESYSTEM_FOUND ON CACHE INTERNAL Whether the Boost FILESYSTEM library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_FILESYSTEM_LIBRARY Boost_FILESYSTEM_LIBRARY_RELEASE Boost_FILESYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_GRAPH_LIBRARY_DEBUG AND Boost_GRAPH_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_GRAPH_LIBRARY_RELEASE AND NOT Boost_GRAPH_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_GRAPH_LIBRARY_DEBUG ${Boost_GRAPH_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_GRAPH_LIBRARY ${Boost_GRAPH_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_GRAPH_LIBRARIES ${Boost_GRAPH_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_GRAPH_LIBRARY_DEBUG AND NOT Boost_GRAPH_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_GRAPH_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_GRAPH_LIBRARY ${Boost_GRAPH_LIBRARY} CACHE FILEPATH The Boost GRAPH library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_GRAPH_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_GRAPH_FOUND ON CACHE INTERNAL Whether the Boost GRAPH library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_GRAPH_LIBRARY Boost_GRAPH_LIBRARY_RELEASE Boost_GRAPH_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_IOSTREAMS_LIBRARY_DEBUG AND Boost_IOSTREAMS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_IOSTREAMS_LIBRARY_RELEASE AND NOT Boost_IOSTREAMS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_IOSTREAMS_LIBRARY_DEBUG ${Boost_IOSTREAMS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_IOSTREAMS_LIBRARY ${Boost_IOSTREAMS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_IOSTREAMS_LIBRARIES ${Boost_IOSTREAMS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_IOSTREAMS_LIBRARY_DEBUG AND NOT Boost_IOSTREAMS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_IOSTREAMS_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_IOSTREAMS_LIBRARY ${Boost_IOSTREAMS_LIBRARY} CACHE FILEPATH The Boost IOSTREAMS library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_IOSTREAMS_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_IOSTREAMS_FOUND ON CACHE INTERNAL Whether the Boost IOSTREAMS library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_IOSTREAMS_LIBRARY Boost_IOSTREAMS_LIBRARY_RELEASE Boost_IOSTREAMS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG AND Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE AND NOT Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_PROGRAM_OPTIONS_LIBRARY ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_PROGRAM_OPTIONS_LIBRARIES ${Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG AND NOT Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_PROGRAM_OPTIONS_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_PROGRAM_OPTIONS_LIBRARY ${Boost_PROGRAM_OPTIONS_LIBRARY} CACHE FILEPATH The Boost PROGRAM_OPTIONS library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_PROGRAM_OPTIONS_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_PROGRAM_OPTIONS_FOUND ON CACHE INTERNAL Whether the Boost PROGRAM_OPTIONS library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_PROGRAM_OPTIONS_LIBRARY Boost_PROGRAM_OPTIONS_LIBRARY_RELEASE Boost_PROGRAM_OPTIONS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_REGEX_LIBRARY_DEBUG AND Boost_REGEX_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_REGEX_LIBRARY_RELEASE AND NOT Boost_REGEX_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_REGEX_LIBRARY_DEBUG ${Boost_REGEX_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_REGEX_LIBRARY ${Boost_REGEX_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_REGEX_LIBRARIES ${Boost_REGEX_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_REGEX_LIBRARY_DEBUG AND NOT Boost_REGEX_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_REGEX_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_REGEX_LIBRARY ${Boost_REGEX_LIBRARY} CACHE FILEPATH The Boost REGEX library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_REGEX_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_REGEX_FOUND ON CACHE INTERNAL Whether the Boost REGEX library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_REGEX_LIBRARY Boost_REGEX_LIBRARY_RELEASE Boost_REGEX_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_SERIALIZATION_LIBRARY_DEBUG AND Boost_SERIALIZATION_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_SERIALIZATION_LIBRARY_RELEASE AND NOT Boost_SERIALIZATION_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_SERIALIZATION_LIBRARY_DEBUG ${Boost_SERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_SERIALIZATION_LIBRARY ${Boost_SERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_SERIALIZATION_LIBRARIES ${Boost_SERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_SERIALIZATION_LIBRARY_DEBUG AND NOT Boost_SERIALIZATION_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_SERIALIZATION_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_SERIALIZATION_LIBRARY ${Boost_SERIALIZATION_LIBRARY} CACHE FILEPATH The Boost SERIALIZATION library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_SERIALIZATION_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_SERIALIZATION_FOUND ON CACHE INTERNAL Whether the Boost SERIALIZATION library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_SERIALIZATION_LIBRARY Boost_SERIALIZATION_LIBRARY_RELEASE Boost_SERIALIZATION_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_SIGNALS_LIBRARY_DEBUG AND Boost_SIGNALS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_SIGNALS_LIBRARY_RELEASE AND NOT Boost_SIGNALS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_SIGNALS_LIBRARY_DEBUG ${Boost_SIGNALS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_SIGNALS_LIBRARY ${Boost_SIGNALS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_SIGNALS_LIBRARIES ${Boost_SIGNALS_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_SIGNALS_LIBRARY_DEBUG AND NOT Boost_SIGNALS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_SIGNALS_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_SIGNALS_LIBRARY ${Boost_SIGNALS_LIBRARY} CACHE FILEPATH The Boost SIGNALS library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_SIGNALS_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_SIGNALS_FOUND ON CACHE INTERNAL Whether the Boost SIGNALS library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_SIGNALS_LIBRARY Boost_SIGNALS_LIBRARY_RELEASE Boost_SIGNALS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_SYSTEM_LIBRARY_DEBUG AND Boost_SYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_SYSTEM_LIBRARY_RELEASE AND NOT Boost_SYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_SYSTEM_LIBRARY_DEBUG ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_SYSTEM_LIBRARY ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_SYSTEM_LIBRARIES ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_SYSTEM_LIBRARY_DEBUG AND NOT Boost_SYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_SYSTEM_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_SYSTEM_LIBRARY ${Boost_SYSTEM_LIBRARY} CACHE FILEPATH The Boost SYSTEM library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_SYSTEM_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_SYSTEM_FOUND ON CACHE INTERNAL Whether the Boost SYSTEM library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_SYSTEM_LIBRARY Boost_SYSTEM_LIBRARY_RELEASE Boost_SYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_THREAD_LIBRARY_DEBUG AND Boost_THREAD_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_THREAD_LIBRARY_RELEASE AND NOT Boost_THREAD_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_THREAD_LIBRARY_DEBUG ${Boost_THREAD_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_THREAD_LIBRARY ${Boost_THREAD_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_THREAD_LIBRARIES ${Boost_THREAD_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_THREAD_LIBRARY_DEBUG AND NOT Boost_THREAD_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_THREAD_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_THREAD_LIBRARY ${Boost_THREAD_LIBRARY} CACHE FILEPATH The Boost THREAD library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_THREAD_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_THREAD_FOUND ON CACHE INTERNAL Whether the Boost THREAD library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_THREAD_LIBRARY Boost_THREAD_LIBRARY_RELEASE Boost_THREAD_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(355):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(356):  _Boost_ADJUST_LIB_VARS(${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_WSERIALIZATION_LIBRARY_DEBUG AND Boost_WSERIALIZATION_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_WSERIALIZATION_LIBRARY_RELEASE AND NOT Boost_WSERIALIZATION_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_WSERIALIZATION_LIBRARY_DEBUG ${Boost_WSERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_WSERIALIZATION_LIBRARY ${Boost_WSERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_WSERIALIZATION_LIBRARIES ${Boost_WSERIALIZATION_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_WSERIALIZATION_LIBRARY_DEBUG AND NOT Boost_WSERIALIZATION_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_WSERIALIZATION_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_WSERIALIZATION_LIBRARY ${Boost_WSERIALIZATION_LIBRARY} CACHE FILEPATH The Boost WSERIALIZATION library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_WSERIALIZATION_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_WSERIALIZATION_FOUND ON CACHE INTERNAL Whether the Boost WSERIALIZATION library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_WSERIALIZATION_LIBRARY Boost_WSERIALIZATION_LIBRARY_RELEASE Boost_WSERIALIZATION_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(357):  SET(Boost_LIBRARIES ${Boost_LIBRARIES} ${Boost_${COMPONENT}_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(359):  SET(Boost_INCLUDE_DIRS ${Boost_INCLUDE_DIR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(360):  IF(Boost_VERSION AND NOT ${Boost_VERSION} STREQUAL 0 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(361):  MATH(EXPR Boost_MAJOR_VERSION ${Boost_VERSION} / 100000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(362):  MATH(EXPR Boost_MINOR_VERSION ${Boost_VERSION} / 100 % 1000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(363):  MATH(EXPR Boost_SUBMINOR_VERSION ${Boost_VERSION} % 100 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(365):  if(Boost_DEBUG )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(9):  INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(13):  set(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(14):  find_package(SIGAR REQUIRED )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(9):  if(SIGAR_INCLUDE_DIR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(11):  set(SIGAR_FIND_QUIETLY TRUE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(14):  find_path(SIGAR_INCLUDE_DIR sigar.h /opt/local/include /usr/local/include /usr/include )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(22):  set(SIGAR_NAMES sigar-x86-linux sigar-x86_64-linux sigar-amd64-linux sigar-universal64-macosx sigar-universal-macosx sigar-x86-solaris sigar )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(29):  find_library(SIGAR_LIBRARY NAMES ${SIGAR_NAMES} PATHS /usr/lib /usr/local/lib /opt/local/lib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(34):  if(SIGAR_INCLUDE_DIR AND SIGAR_LIBRARY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(35):  set(SIGAR_FOUND TRUE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(36):  set(SIGAR_LIBRARIES ${SIGAR_LIBRARY} ${CMAKE_DL_LIBS} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(42):  if(SIGAR_FOUND )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(43):  message(STATUS Found SIGAR: ${SIGAR_LIBRARIES} )
-- Found SIGAR: /usr/local/lib/libsigar-x86-linux.so;dl
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindSIGAR.cmake(52):  mark_as_advanced(SIGAR_LIBRARY SIGAR_INCLUDE_DIR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(18):  find_package(EXPAT REQUIRED )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(22):  FIND_PATH(EXPAT_INCLUDE_DIR NAMES expat.h )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(25):  FIND_LIBRARY(EXPAT_LIBRARY NAMES expat libexpat )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(29):  INCLUDE(FindPackageHandleStandardArgs )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(33):  INCLUDE(FindPackageMessage )
/usr/share/cmake-2.8/Modules/FindPackageMessage.cmake(34):  FUNCTION(FIND_PACKAGE_MESSAGE pkg msg details )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(34):  FUNCTION(FIND_PACKAGE_HANDLE_STANDARD_ARGS _NAME _FAIL_MSG _VAR1 )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(30):  FIND_PACKAGE_HANDLE_STANDARD_ARGS(EXPAT DEFAULT_MSG EXPAT_LIBRARY EXPAT_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(36):  IF(${_FAIL_MSG} STREQUAL DEFAULT_MSG )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(37):  SET(_FAIL_MESSAGE Could NOT find ${_NAME} )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(42):  STRING(TOUPPER ${_NAME} _NAME_UPPER )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(46):  SET(MISSING_VARS  )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(47):  SET(DETAILS  )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(48):  SET(${_NAME_UPPER}_FOUND TRUE )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(49):  IF(NOT ${_VAR1} )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(53):  SET(DETAILS ${DETAILS}[${${_VAR1}}] )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(57):  FOREACH(_CURRENT_VAR ${ARGN} )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(58):  IF(NOT ${_CURRENT_VAR} )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(62):  SET(DETAILS ${DETAILS}[${${_CURRENT_VAR}}] )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(66):  IF(${_NAME_UPPER}_FOUND )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(67):  FIND_PACKAGE_MESSAGE(${_NAME} Found ${_NAME}: ${${_VAR1}} ${DETAILS} )
/usr/share/cmake-2.8/Modules/FindPackageMessage.cmake(36):  IF(NOT ${pkg}_FIND_QUIETLY )
/usr/share/cmake-2.8/Modules/FindPackageMessage.cmake(37):  SET(DETAILS_VAR FIND_PACKAGE_MESSAGE_DETAILS_${pkg} )
/usr/share/cmake-2.8/Modules/FindPackageMessage.cmake(38):  IF(NOT ${details} STREQUAL ${${DETAILS_VAR}} )
/usr/share/cmake-2.8/Modules/FindPackageHandleStandardArgs.cmake(78):  SET(${_NAME_UPPER}_FOUND ${${_NAME_UPPER}_FOUND} PARENT_SCOPE )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(33):  IF(EXPAT_FOUND )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(34):  SET(EXPAT_LIBRARIES ${EXPAT_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(35):  SET(EXPAT_INCLUDE_DIRS ${EXPAT_INCLUDE_DIR} )
/usr/share/cmake-2.8/Modules/FindEXPAT.cmake(38):  MARK_AS_ADVANCED(EXPAT_INCLUDE_DIR EXPAT_LIBRARY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(19):  find_package(Readline REQUIRED )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(9):  find_path(READLINE_INCLUDE_DIR readline/readline.h /opt/local/include /usr/local/include )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(14):  find_library(READLINE_LIBRARY NAMES readline PATHS /opt/local/lib /usr/local/lib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(19):  find_library(NCURSES_LIBRARY NAMES ncurses PATHS /opt/local/lib /usr/local/lib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(24):  if(READLINE_LIBRARY AND READLINE_INCLUDE_DIR AND NCURSES_LIBRARY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(25):  set(READLINE_LIBRARIES ${READLINE_LIBRARY} ${NCURSES_LIBRARY} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(26):  set(READLINE_FOUND YES )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(31):  if(READLINE_FOUND )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(32):  if(NOT READLINE_FIND_QUIETLY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(33):  message(STATUS Found Readline libraries: ${READLINE_LIBRARIES} )
-- Found Readline libraries: /usr/lib/libreadline.so;/usr/lib/libncurses.so
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindReadline.cmake(41):  mark_as_advanced(NCURSES_LIBRARY READLINE_INCLUDE_DIR READLINE_LIBRARY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(21):  find_package(Log4cpp REQUIRED )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(8):  if(Log4cpp_INCLUDE_DIR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(10):  set(Log4cpp_FIND_QUIETLY TRUE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(13):  find_path(Log4cpp_INCLUDE_DIR log4cpp/Category.hh NO_DEFAULT_PATH PATHS ${HT_DEPENDENCY_INCLUDE_DIR} /opt/local/include /usr/local/include /usr/include )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(20):  set(Log4cpp_NAMES log4cpp )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(21):  find_library(Log4cpp_LIBRARY NO_DEFAULT_PATH NAMES ${Log4cpp_NAMES} PATHS ${HT_DEPENDENCY_LIB_DIR} /usr/lib /usr/local/lib /opt/local/lib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(26):  if(Log4cpp_INCLUDE_DIR AND Log4cpp_LIBRARY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(27):  set(Log4cpp_FOUND TRUE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(28):  set(Log4cpp_LIBRARIES ${Log4cpp_LIBRARY} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(34):  if(Log4cpp_FOUND )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(35):  if(NOT Log4cpp_FIND_QUIETLY )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/cmake/FindLog4cpp.cmake(45):  mark_as_advanced(Log4cpp_LIBRARY Log4cpp_INCLUDE_DIR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(23):  include_directories(/home/mdupont/OSM-API-Proxy/lib/todo/db-5.2.36/build_unix/ /opt/hypertable/0.9.5.0/include/ )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(24):  link_directories(/opt/hypertable/0.9.5.0/lib/ )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(25):  add_executable(testclient testclient.cpp )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(27):  target_link_libraries(testclient Hypertable HyperComm HyperCommon HyperDfsBroker HyperDfsCmds HyperMaster HyperRanger HyperTools Hyperspace db-5.2 db_cxx-5.2 db_stl-5.2 ${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_LIBRARIES} ${SIGAR_LIBRARIES} ${EXPAT_LIBRARIES} ${Log4cpp_LIBRARIES} ${NCURSES_LIBRARY} ${READLINE_LIBRARY} )
-- Configuring done
-- Generating done
-- Build files have been written to: /home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient
