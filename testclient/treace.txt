Running with trace output on.
(0):  PROJECT(Project )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(3):  SET(CMAKE_SYSTEM Linux-2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(4):  SET(CMAKE_SYSTEM_NAME Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(5):  SET(CMAKE_SYSTEM_VERSION 2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(6):  SET(CMAKE_SYSTEM_PROCESSOR i686 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(8):  SET(CMAKE_HOST_SYSTEM Linux-2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(9):  SET(CMAKE_HOST_SYSTEM_NAME Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(10):  SET(CMAKE_HOST_SYSTEM_VERSION 2.6.35-30-generic )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(11):  SET(CMAKE_HOST_SYSTEM_PROCESSOR i686 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(13):  SET(CMAKE_CROSSCOMPILING FALSE )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeSystem.cmake(15):  SET(CMAKE_SYSTEM_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(1):  SET(CMAKE_C_COMPILER /usr/bin/gcc )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(2):  SET(CMAKE_C_COMPILER_ARG1  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(3):  SET(CMAKE_C_COMPILER_ID GNU )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(4):  SET(CMAKE_C_PLATFORM_ID Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(6):  SET(CMAKE_AR /usr/bin/ar )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(7):  SET(CMAKE_RANLIB /usr/bin/ranlib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(8):  SET(CMAKE_LINKER /usr/bin/ld )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(9):  SET(CMAKE_COMPILER_IS_GNUCC 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(10):  SET(CMAKE_C_COMPILER_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(11):  SET(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(12):  SET(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(13):  IF(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(18):  SET(CMAKE_C_COMPILER_ENV_VAR CC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(20):  IF(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(23):  SET(CMAKE_C_COMPILER_ID_RUN 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(24):  SET(CMAKE_C_SOURCE_FILE_EXTENSIONS c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(25):  SET(CMAKE_C_IGNORE_EXTENSIONS h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(26):  SET(CMAKE_C_LINKER_PREFERENCE 10 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(29):  SET(CMAKE_C_SIZEOF_DATA_PTR 4 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(30):  SET(CMAKE_C_COMPILER_ABI ELF )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(32):  IF(CMAKE_C_SIZEOF_DATA_PTR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(33):  SET(CMAKE_SIZEOF_VOID_P ${CMAKE_C_SIZEOF_DATA_PTR} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(36):  IF(CMAKE_C_COMPILER_ABI )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(37):  SET(CMAKE_INTERNAL_PLATFORM_ABI ${CMAKE_C_COMPILER_ABI} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(40):  SET(CMAKE_C_HAS_ISYSROOT  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(43):  SET(CMAKE_C_IMPLICIT_LINK_LIBRARIES c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCCompiler.cmake(44):  SET(CMAKE_C_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/i686-linux-gnu/4.4.5;/usr/lib;/lib;/usr/lib/i686-linux-gnu )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(1):  SET(CMAKE_CXX_COMPILER /usr/bin/c++ )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(2):  SET(CMAKE_CXX_COMPILER_ARG1  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(3):  SET(CMAKE_CXX_COMPILER_ID GNU )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(4):  SET(CMAKE_CXX_PLATFORM_ID Linux )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(6):  SET(CMAKE_AR /usr/bin/ar )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(7):  SET(CMAKE_RANLIB /usr/bin/ranlib )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(8):  SET(CMAKE_LINKER /usr/bin/ld )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(9):  SET(CMAKE_COMPILER_IS_GNUCXX 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(10):  SET(CMAKE_CXX_COMPILER_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(11):  SET(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(12):  SET(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(13):  IF(CMAKE_COMPILER_IS_CYGWIN )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(18):  SET(CMAKE_CXX_COMPILER_ENV_VAR CXX )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(20):  IF(CMAKE_COMPILER_IS_MINGW )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(23):  SET(CMAKE_CXX_COMPILER_ID_RUN 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(24):  SET(CMAKE_CXX_IGNORE_EXTENSIONS inl;h;H;o;O;obj;OBJ;def;DEF;rc;RC )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(25):  SET(CMAKE_CXX_SOURCE_FILE_EXTENSIONS C;M;c++;cc;cpp;cxx;m;mm )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(26):  SET(CMAKE_CXX_LINKER_PREFERENCE 30 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(27):  SET(CMAKE_CXX_LINKER_PREFERENCE_PROPAGATES 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(30):  SET(CMAKE_CXX_SIZEOF_DATA_PTR 4 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(31):  SET(CMAKE_CXX_COMPILER_ABI ELF )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(33):  IF(CMAKE_CXX_SIZEOF_DATA_PTR )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(34):  SET(CMAKE_SIZEOF_VOID_P ${CMAKE_CXX_SIZEOF_DATA_PTR} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(37):  IF(CMAKE_CXX_COMPILER_ABI )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(38):  SET(CMAKE_INTERNAL_PLATFORM_ABI ${CMAKE_CXX_COMPILER_ABI} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(41):  SET(CMAKE_CXX_HAS_ISYSROOT  )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(44):  SET(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES stdc++;m;c )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeFiles/CMakeCXXCompiler.cmake(45):  SET(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES /usr/lib/gcc/i686-linux-gnu/4.4.5;/usr/lib;/lib;/usr/lib/i686-linux-gnu )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(24):  SET(APPLE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(25):  SET(UNIX )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(26):  SET(CYGWIN )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(27):  SET(WIN32 )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(31):  INCLUDE(CMakeGenericSystem )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(15):  SET(CMAKE_SHARED_LIBRARY_C_FLAGS  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(16):  SET(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(17):  SET(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(18):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(19):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(20):  SET(CMAKE_INCLUDE_FLAG_C -I )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(21):  SET(CMAKE_INCLUDE_FLAG_C_SEP  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(22):  SET(CMAKE_LIBRARY_PATH_FLAG -L )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(23):  SET(CMAKE_LIBRARY_PATH_TERMINATOR  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(24):  SET(CMAKE_LINK_LIBRARY_FLAG -l )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(26):  SET(CMAKE_LINK_LIBRARY_SUFFIX  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(27):  SET(CMAKE_STATIC_LIBRARY_PREFIX lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(28):  SET(CMAKE_STATIC_LIBRARY_SUFFIX .a )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(29):  SET(CMAKE_SHARED_LIBRARY_PREFIX lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(30):  SET(CMAKE_SHARED_LIBRARY_SUFFIX .so )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(31):  SET(CMAKE_EXECUTABLE_SUFFIX  )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(32):  SET(CMAKE_DL_LIBS dl )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(34):  SET(CMAKE_FIND_LIBRARY_PREFIXES lib )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(35):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .so .a )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(38):  SET_PROPERTY(GLOBAL PROPERTY TARGET_SUPPORTS_SHARED_LIBS TRUE )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(40):  SET(CMAKE_SKIP_RPATH NO CACHE BOOL If set, runtime paths are not added when using shared libraries. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(43):  SET(CMAKE_VERBOSE_MAKEFILE FALSE CACHE BOOL If this value is on, makefiles will be generated without the .SILENT directive, and all commands will be echoed to the console during the make.  This is useful for debugging only. With Visual Studio IDE projects all commands are done without /nologo. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(45):  IF(CMAKE_GENERATOR MATCHES Makefiles )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(46):  SET(CMAKE_COLOR_MAKEFILE ON CACHE BOOL Enable/Disable color output during build. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(49):  MARK_AS_ADVANCED(CMAKE_COLOR_MAKEFILE )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(50):  IF(DEFINED CMAKE_RULE_MESSAGES )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(59):  IF(NOT DEFINED CMAKE_INSTALL_PREFIX )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(64):  IF(CMAKE_HOST_UNIX )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(65):  SET(CMAKE_INSTALL_PREFIX /usr/local CACHE PATH Install path prefix, prepended onto install directories. )
/usr/share/cmake-2.8/Modules/CMakeGenericSystem.cmake(87):  MARK_AS_ADVANCED(CMAKE_SKIP_RPATH CMAKE_VERBOSE_MAKEFILE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(34):  SET(CMAKE_SYSTEM_INFO_FILE Platform/${CMAKE_SYSTEM_NAME} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(36):  INCLUDE(${CMAKE_SYSTEM_INFO_FILE} OPTIONAL RESULT_VARIABLE _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(1):  SET(CMAKE_DL_LIBS dl )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(2):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG -Wl,-rpath, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(3):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP : )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(4):  SET(CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG -Wl,-rpath-link, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(5):  SET(CMAKE_SHARED_LIBRARY_SONAME_C_FLAG -Wl,-soname, )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(6):  SET(CMAKE_EXE_EXPORTS_C_FLAG -Wl,--export-dynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(10):  SET(CMAKE_PLATFORM_USES_PATH_WHEN_NO_SONAME 1 )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(16):  FOREACH(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(17):  SET(CMAKE_${type}_LINK_STATIC_C_FLAGS -Wl,-Bstatic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(18):  SET(CMAKE_${type}_LINK_DYNAMIC_C_FLAGS -Wl,-Bdynamic )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(29):  IF(DEFINED CMAKE_INSTALL_SO_NO_EXE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(32):  SET(CMAKE_INSTALL_SO_NO_EXE ${CMAKE_INSTALL_SO_NO_EXE} CACHE INTERNAL Install .so files without execute permission. )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(48):  INCLUDE(Platform/UnixPaths )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(20):  IF(__UNIX_PATHS_INCLUDED )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(23):  SET(__UNIX_PATHS_INCLUDED 1 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(25):  SET(UNIX 1 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(29):  GET_FILENAME_COMPONENT(_CMAKE_INSTALL_DIR ${CMAKE_ROOT} PATH )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(30):  GET_FILENAME_COMPONENT(_CMAKE_INSTALL_DIR ${_CMAKE_INSTALL_DIR} PATH )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(34):  LIST(APPEND CMAKE_SYSTEM_PREFIX_PATH /usr/local /usr / ${_CMAKE_INSTALL_DIR} ${CMAKE_INSTALL_PREFIX} )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(46):  LIST(APPEND CMAKE_SYSTEM_INCLUDE_PATH /usr/include/w32api /usr/X11R6/include /usr/include/X11 /opt/local/include /usr/pkg/include /opt/csw/include /opt/include /usr/openwin/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(59):  LIST(APPEND CMAKE_SYSTEM_LIBRARY_PATH /usr/lib/w32api /usr/X11R6/lib /usr/lib/X11 /opt/local/lib /usr/pkg/lib /opt/csw/lib /opt/lib /usr/openwin/lib )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(72):  LIST(APPEND CMAKE_SYSTEM_PROGRAM_PATH /usr/pkg/bin )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(76):  LIST(APPEND CMAKE_PLATFORM_IMPLICIT_LINK_DIRECTORIES /lib /usr/lib /usr/lib32 /usr/lib64 )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(80):  LIST(APPEND CMAKE_C_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(83):  LIST(APPEND CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES /usr/include )
/usr/share/cmake-2.8/Modules/Platform/UnixPaths.cmake(88):  SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS TRUE )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(52):  IF(EXISTS /etc/debian_version )
/usr/share/cmake-2.8/Modules/Platform/Linux.cmake(53):  SET_PROPERTY(GLOBAL PROPERTY FIND_LIBRARY_USE_LIB64_PATHS FALSE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(38):  IF(NOT _INCLUDED_SYSTEM_INFO_FILE )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(53):  IF(CMAKE_EXTRA_GENERATOR )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(63):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(64):  SET(CMAKE_SHARED_MODULE_PREFIX ${CMAKE_SHARED_LIBRARY_PREFIX} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(65):  SET(CMAKE_SHARED_MODULE_SUFFIX ${CMAKE_SHARED_LIBRARY_SUFFIX} )
/usr/share/cmake-2.8/Modules/CMakeSystemSpecificInformation.cmake(69):  SET(CMAKE_SYSTEM_SPECIFIC_INFORMATION_LOADED 1 )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(23):  IF(UNIX )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(24):  SET(CMAKE_C_OUTPUT_EXTENSION .o )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(30):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(31):  INCLUDE(Compiler/${CMAKE_C_COMPILER_ID}-C OPTIONAL )
/usr/share/cmake-2.8/Modules/Compiler/GNU-C.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(19):  set(__COMPILER_GNU 1 )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(21):  macro(__compiler_gnu lang )
/usr/share/cmake-2.8/Modules/Compiler/GNU-C.cmake(2):  __compiler_gnu(C )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(23):  set(CMAKE_C_VERBOSE_FLAG -v )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_C_FLAGS -fPIC )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(25):  set(CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS -shared )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(28):  set(CMAKE_C_FLAGS_INIT  )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(29):  set(CMAKE_C_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(30):  set(CMAKE_C_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(31):  set(CMAKE_C_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(32):  set(CMAKE_C_FLAGS_RELWITHDEBINFO_INIT -O2 -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(33):  set(CMAKE_C_CREATE_PREPROCESSED_SOURCE <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(34):  set(CMAKE_C_CREATE_ASSEMBLY_SOURCE <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(35):  if(NOT APPLE )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(36):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(34):  SET(CMAKE_BASE_NAME )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(35):  GET_FILENAME_COMPONENT(CMAKE_BASE_NAME ${CMAKE_C_COMPILER} NAME_WE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(36):  IF(CMAKE_COMPILER_IS_GNUCC )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(37):  SET(CMAKE_BASE_NAME gcc )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(42):  IF(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(43):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(44):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_C_COMPILER_ID}-C-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(46):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(47):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(53):  IF(CMAKE_C_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(54):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_C_COMPILER_ID}-C OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-C.cmake(1):  INCLUDE(Platform/Linux-GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(19):  set(__LINUX_COMPILER_GNU 1 )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(21):  macro(__linux_compiler_gnu lang )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-C.cmake(2):  __linux_compiler_gnu(C )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_C_FLAGS -rdynamic )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(57):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(65):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(76):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(80):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE_C )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(88):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(89):  SET(CMAKE_SHARED_MODULE_C_FLAGS ${CMAKE_SHARED_LIBRARY_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(90):  SET(CMAKE_SHARED_MODULE_CREATE_C_FLAGS ${CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(93):  SET(CMAKE_C_FLAGS_INIT $ENV{CFLAGS} ${CMAKE_C_FLAGS_INIT} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(95):  IF(CMAKE_C_FLAGS_INIT STREQUAL   )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(96):  SET(CMAKE_C_FLAGS_INIT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(98):  SET(CMAKE_C_FLAGS ${CMAKE_C_FLAGS_INIT} CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(101):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(103):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(104):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(107):  SET(CMAKE_C_FLAGS_DEBUG ${CMAKE_C_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(109):  SET(CMAKE_C_FLAGS_MINSIZEREL ${CMAKE_C_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the compiler during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(111):  SET(CMAKE_C_FLAGS_RELEASE ${CMAKE_C_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the compiler during release builds (/MD /Ob1 /Oi /Ot /Oy /Gs will produce slightly less optimized but smaller files). )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(113):  SET(CMAKE_C_FLAGS_RELWITHDEBINFO ${CMAKE_C_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the compiler during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(117):  IF(CMAKE_C_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(123):  INCLUDE(CMakeCommonLanguageInclude )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(19):  SET(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(23):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(25):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(26):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(30):  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(33):  SET(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(36):  SET(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(39):  SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(43):  SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG ${CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(46):  SET(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ${CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(50):  SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE ${CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(53):  SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(57):  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG ${CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(60):  SET(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ${CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(64):  SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE ${CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(67):  SET(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(73):  SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(77):  SET(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(80):  SET(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} CACHE INTERNAL What is the target build tool cmake is generating for. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(84):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(153):  IF(NOT CMAKE_C_CREATE_SHARED_LIBRARY )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(154):  SET(CMAKE_C_CREATE_SHARED_LIBRARY <CMAKE_C_COMPILER> <CMAKE_SHARED_LIBRARY_C_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_C_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_C_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(159):  IF(NOT CMAKE_C_CREATE_SHARED_MODULE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(160):  SET(CMAKE_C_CREATE_SHARED_MODULE ${CMAKE_C_CREATE_SHARED_LIBRARY} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(165):  SET(CMAKE_C_ARCHIVE_CREATE <CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(166):  SET(CMAKE_C_ARCHIVE_APPEND <CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(167):  SET(CMAKE_C_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(170):  IF(NOT CMAKE_C_COMPILE_OBJECT )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(171):  SET(CMAKE_C_COMPILE_OBJECT <CMAKE_C_COMPILER> <DEFINES> <FLAGS> -o <OBJECT>   -c <SOURCE> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(175):  IF(NOT CMAKE_C_LINK_EXECUTABLE )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(176):  SET(CMAKE_C_LINK_EXECUTABLE <CMAKE_C_COMPILER> <FLAGS> <CMAKE_C_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(180):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(181):  SET(CMAKE_EXECUTABLE_RUNTIME_C_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(184):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(185):  SET(CMAKE_EXECUTABLE_RUNTIME_C_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(188):  IF(NOT CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(189):  SET(CMAKE_EXECUTABLE_RPATH_LINK_C_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(192):  MARK_AS_ADVANCED(CMAKE_C_FLAGS CMAKE_C_FLAGS_DEBUG CMAKE_C_FLAGS_MINSIZEREL CMAKE_C_FLAGS_RELEASE CMAKE_C_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCInformation.cmake(199):  SET(CMAKE_C_INFORMATION_LOADED 1 )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(23):  IF(UNIX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(24):  SET(CMAKE_CXX_OUTPUT_EXTENSION .o )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(30):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(31):  INCLUDE(Compiler/${CMAKE_CXX_COMPILER_ID}-CXX OPTIONAL )
/usr/share/cmake-2.8/Modules/Compiler/GNU-CXX.cmake(1):  include(Compiler/GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(16):  if(__COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(17):  return()
/usr/share/cmake-2.8/Modules/Compiler/GNU-CXX.cmake(2):  __compiler_gnu(CXX )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(23):  set(CMAKE_CXX_VERBOSE_FLAG -v )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_CXX_FLAGS -fPIC )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(25):  set(CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS -shared )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(28):  set(CMAKE_CXX_FLAGS_INIT  )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(29):  set(CMAKE_CXX_FLAGS_DEBUG_INIT -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(30):  set(CMAKE_CXX_FLAGS_MINSIZEREL_INIT -Os -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(31):  set(CMAKE_CXX_FLAGS_RELEASE_INIT -O3 -DNDEBUG )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(32):  set(CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT -O2 -g )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(33):  set(CMAKE_CXX_CREATE_PREPROCESSED_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -E <SOURCE> > <PREPROCESSED_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(34):  set(CMAKE_CXX_CREATE_ASSEMBLY_SOURCE <CMAKE_CXX_COMPILER> <DEFINES> <FLAGS> -S <SOURCE> -o <ASSEMBLY_SOURCE> )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(35):  if(NOT APPLE )
/usr/share/cmake-2.8/Modules/Compiler/GNU.cmake(36):  set(CMAKE_INCLUDE_SYSTEM_FLAG_CXX -isystem  )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(34):  SET(CMAKE_BASE_NAME )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(35):  GET_FILENAME_COMPONENT(CMAKE_BASE_NAME ${CMAKE_CXX_COMPILER} NAME_WE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(37):  IF(CMAKE_COMPILER_IS_GNUCXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(38):  SET(CMAKE_BASE_NAME g++ )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(43):  IF(CMAKE_SYSTEM_PROCESSOR )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(44):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(45):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_CXX_COMPILER_ID}-CXX-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(47):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(48):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_BASE_NAME}-${CMAKE_SYSTEM_PROCESSOR} OPTIONAL )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(53):  IF(CMAKE_CXX_COMPILER_ID )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(54):  INCLUDE(Platform/${CMAKE_SYSTEM_NAME}-${CMAKE_CXX_COMPILER_ID}-CXX OPTIONAL RESULT_VARIABLE _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-CXX.cmake(1):  INCLUDE(Platform/Linux-GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(16):  if(__LINUX_COMPILER_GNU )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(17):  return()
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU-CXX.cmake(2):  __linux_compiler_gnu(CXX )
/usr/share/cmake-2.8/Modules/Platform/Linux-GNU.cmake(24):  set(CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS -rdynamic )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(56):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(64):  IF(NOT _INCLUDED_FILE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(75):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(79):  IF(CMAKE_USER_MAKE_RULES_OVERRIDE_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(87):  IF(NOT CMAKE_MODULE_EXISTS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(88):  SET(CMAKE_SHARED_MODULE_CXX_FLAGS ${CMAKE_SHARED_LIBRARY_CXX_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(93):  IF(NOT CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(97):  IF(NOT CMAKE_SHARED_LIBRARY_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(101):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(105):  IF(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(106):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(109):  IF(NOT CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(110):  SET(CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_C_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(113):  IF(NOT CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(114):  SET(CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(117):  IF(NOT DEFINED CMAKE_EXE_EXPORTS_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(118):  SET(CMAKE_EXE_EXPORTS_CXX_FLAG ${CMAKE_EXE_EXPORTS_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(121):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(122):  SET(CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_SONAME_C_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(125):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(126):  SET(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(129):  IF(NOT CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(130):  SET(CMAKE_EXECUTABLE_RUNTIME_CXX_FLAG_SEP ${CMAKE_SHARED_LIBRARY_RUNTIME_CXX_FLAG_SEP} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(133):  IF(NOT CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(134):  SET(CMAKE_EXECUTABLE_RPATH_LINK_CXX_FLAG ${CMAKE_SHARED_LIBRARY_RPATH_LINK_CXX_FLAG} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(137):  IF(NOT DEFINED CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(138):  SET(CMAKE_SHARED_LIBRARY_LINK_CXX_WITH_RUNTIME_PATH ${CMAKE_SHARED_LIBRARY_LINK_C_WITH_RUNTIME_PATH} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(141):  IF(NOT CMAKE_INCLUDE_FLAG_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(142):  SET(CMAKE_INCLUDE_FLAG_CXX ${CMAKE_INCLUDE_FLAG_C} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(145):  IF(NOT CMAKE_INCLUDE_FLAG_SEP_CXX )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(146):  SET(CMAKE_INCLUDE_FLAG_SEP_CXX ${CMAKE_INCLUDE_FLAG_SEP_C} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(150):  IF(NOT CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(151):  SET(CMAKE_SHARED_MODULE_CREATE_CXX_FLAGS ${CMAKE_SHARED_MODULE_CREATE_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(154):  IF(NOT CMAKE_SHARED_MODULE_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(159):  FOREACH(type SHARED_LIBRARY SHARED_MODULE EXE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(160):  IF(NOT CMAKE_${type}_LINK_STATIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(161):  SET(CMAKE_${type}_LINK_STATIC_CXX_FLAGS ${CMAKE_${type}_LINK_STATIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(164):  IF(NOT CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(165):  SET(CMAKE_${type}_LINK_DYNAMIC_CXX_FLAGS ${CMAKE_${type}_LINK_DYNAMIC_C_FLAGS} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(174):  SET(CMAKE_CXX_FLAGS_INIT $ENV{CXXFLAGS} ${CMAKE_CXX_FLAGS_INIT} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(176):  IF(CMAKE_CXX_FLAGS_INIT STREQUAL   )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(177):  SET(CMAKE_CXX_FLAGS_INIT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(179):  SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS_INIT} CACHE STRING Flags used by the compiler during all build types. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(182):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(183):  SET(CMAKE_CXX_FLAGS_DEBUG ${CMAKE_CXX_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the compiler during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(185):  SET(CMAKE_CXX_FLAGS_MINSIZEREL ${CMAKE_CXX_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the compiler during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(187):  SET(CMAKE_CXX_FLAGS_RELEASE ${CMAKE_CXX_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the compiler during release builds (/MD /Ob1 /Oi /Ot /Oy /Gs will produce slightly less optimized but smaller files). )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(189):  SET(CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the compiler during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(194):  IF(CMAKE_CXX_STANDARD_LIBRARIES_INIT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(200):  INCLUDE(CMakeCommonLanguageInclude )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(19):  SET(CMAKE_EXE_LINKER_FLAGS ${CMAKE_EXE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(23):  IF(NOT CMAKE_NOT_USING_CONFIG_FLAGS )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(25):  IF(NOT CMAKE_NO_BUILD_TYPE )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(26):  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE_INIT} CACHE STRING Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(30):  SET(CMAKE_EXE_LINKER_FLAGS_DEBUG ${CMAKE_EXE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(33):  SET(CMAKE_EXE_LINKER_FLAGS_MINSIZEREL ${CMAKE_EXE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(36):  SET(CMAKE_EXE_LINKER_FLAGS_RELEASE ${CMAKE_EXE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(39):  SET(CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(43):  SET(CMAKE_SHARED_LINKER_FLAGS_DEBUG ${CMAKE_SHARED_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(46):  SET(CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL ${CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(50):  SET(CMAKE_SHARED_LINKER_FLAGS_RELEASE ${CMAKE_SHARED_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(53):  SET(CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(57):  SET(CMAKE_MODULE_LINKER_FLAGS_DEBUG ${CMAKE_MODULE_LINKER_FLAGS_DEBUG_INIT} CACHE STRING Flags used by the linker during debug builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(60):  SET(CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL ${CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL_INIT} CACHE STRING Flags used by the linker during release minsize builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(64):  SET(CMAKE_MODULE_LINKER_FLAGS_RELEASE ${CMAKE_MODULE_LINKER_FLAGS_RELEASE_INIT} CACHE STRING Flags used by the linker during release builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(67):  SET(CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO ${CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO_INIT} CACHE STRING Flags used by the linker during Release with Debug Info builds. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(73):  SET(CMAKE_SHARED_LINKER_FLAGS ${CMAKE_SHARED_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of dll's. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(77):  SET(CMAKE_MODULE_LINKER_FLAGS ${CMAKE_MODULE_LINKER_FLAGS_INIT} $ENV{LDFLAGS} CACHE STRING Flags used by the linker during the creation of modules. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(80):  SET(CMAKE_BUILD_TOOL ${CMAKE_MAKE_PROGRAM} CACHE INTERNAL What is the target build tool cmake is generating for. )
/usr/share/cmake-2.8/Modules/CMakeCommonLanguageInclude.cmake(84):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_EXE_LINKER_FLAGS CMAKE_EXE_LINKER_FLAGS_DEBUG CMAKE_EXE_LINKER_FLAGS_MINSIZEREL CMAKE_EXE_LINKER_FLAGS_RELEASE CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO CMAKE_SHARED_LINKER_FLAGS CMAKE_SHARED_LINKER_FLAGS_DEBUG CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL CMAKE_SHARED_LINKER_FLAGS_RELEASE CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO CMAKE_MODULE_LINKER_FLAGS CMAKE_MODULE_LINKER_FLAGS_DEBUG CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL CMAKE_MODULE_LINKER_FLAGS_RELEASE CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(229):  IF(NOT CMAKE_CXX_CREATE_SHARED_LIBRARY )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(230):  SET(CMAKE_CXX_CREATE_SHARED_LIBRARY <CMAKE_CXX_COMPILER> <CMAKE_SHARED_LIBRARY_CXX_FLAGS> <LANGUAGE_COMPILE_FLAGS> <LINK_FLAGS> <CMAKE_SHARED_LIBRARY_CREATE_CXX_FLAGS> <CMAKE_SHARED_LIBRARY_SONAME_CXX_FLAG><TARGET_SONAME> -o <TARGET> <OBJECTS> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(235):  IF(NOT CMAKE_CXX_CREATE_SHARED_MODULE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(236):  SET(CMAKE_CXX_CREATE_SHARED_MODULE ${CMAKE_CXX_CREATE_SHARED_LIBRARY} )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(242):  SET(CMAKE_CXX_ARCHIVE_CREATE <CMAKE_AR> cr <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(243):  SET(CMAKE_CXX_ARCHIVE_APPEND <CMAKE_AR> r  <TARGET> <LINK_FLAGS> <OBJECTS> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(244):  SET(CMAKE_CXX_ARCHIVE_FINISH <CMAKE_RANLIB> <TARGET> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(247):  IF(NOT CMAKE_CXX_COMPILE_OBJECT )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(248):  SET(CMAKE_CXX_COMPILE_OBJECT <CMAKE_CXX_COMPILER>  <DEFINES> <FLAGS> -o <OBJECT> -c <SOURCE> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(252):  IF(NOT CMAKE_CXX_LINK_EXECUTABLE )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(253):  SET(CMAKE_CXX_LINK_EXECUTABLE <CMAKE_CXX_COMPILER>  <FLAGS> <CMAKE_CXX_LINK_FLAGS> <LINK_FLAGS> <OBJECTS>  -o <TARGET> <LINK_LIBRARIES> )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(257):  MARK_AS_ADVANCED(CMAKE_BUILD_TOOL CMAKE_VERBOSE_MAKEFILE CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_RELEASE CMAKE_CXX_FLAGS_RELWITHDEBINFO CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_DEBUG )
/usr/share/cmake-2.8/Modules/CMakeCXXInformation.cmake(266):  SET(CMAKE_CXX_INFORMATION_LOADED 1 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(1):  cmake_minimum_required(VERSION 2.8 )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(4):  set(Boost_USE_STATIC_LIBS ON )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(5):  set(Boost_USE_MULTITHREADED ON )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(6):  find_package(Boost 1.48.0 COMPONENTS date_time filesystem system threads )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(195):  MACRO(_Boost_ADJUST_LIB_VARS basename )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(255):  FUNCTION(_Boost_COMPILER_DUMPVERSION _OUTPUT_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(271):  function(_Boost_MARK_COMPONENTS_FOUND _yes_or_no )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(286):  IF(NOT DEFINED Boost_USE_MULTITHREADED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(290):  if(Boost_FIND_VERSION_EXACT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(299):  set(_Boost_KNOWN_VERSIONS ${Boost_ADDITIONAL_VERSIONS} 1.41.0 1.41 1.40.0 1.40 1.39.0 1.39 1.38.0 1.38 1.37.0 1.37 1.36.1 1.36.0 1.36 1.35.1 1.35.0 1.35 1.34.1 1.34.0 1.34 1.33.1 1.33.0 1.33 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(303):  set(_boost_TEST_VERSIONS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(304):  if(Boost_FIND_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(305):  set(_Boost_FIND_VERSION_SHORT ${Boost_FIND_VERSION_MAJOR}.${Boost_FIND_VERSION_MINOR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(307):  foreach(version ${_Boost_KNOWN_VERSIONS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(308):  if(NOT ${version} VERSION_LESS ${Boost_FIND_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(326):  set(Boost_ERROR_REASON )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(328):  SET(_boost_IN_CACHE TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(329):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(333):  if(Boost_VERSION AND Boost_FIND_COMPONENTS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(334):  math(EXPR _boost_maj ${Boost_VERSION} / 100000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(335):  math(EXPR _boost_min ${Boost_VERSION} / 100 % 1000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(336):  if(${_boost_maj}.${_boost_min} VERSION_LESS 1.35 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(341):  FOREACH(COMPONENT ${Boost_FIND_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(342):  STRING(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(343):  IF(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(344):  SET(_boost_IN_CACHE FALSE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(351):  IF(_boost_IN_CACHE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(372):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(384):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(406):  SET(_boost_INCLUDE_SEARCH_DIRS C:/boost/include C:/boost $ENV{ProgramFiles}/boost/include $ENV{ProgramFiles}/boost /sw/local/include )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(415):  if(NOT BOOST_ROOT AND NOT $ENV{BOOST_ROOT} STREQUAL  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(420):  if(NOT BOOST_ROOT AND NOT $ENV{BOOSTROOT} STREQUAL  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(425):  IF(NOT $ENV{BOOST_INCLUDEDIR} STREQUAL  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(430):  IF(NOT $ENV{BOOST_LIBRARYDIR} STREQUAL  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(434):  IF(BOOST_ROOT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(438):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(451):  IF(BOOST_ROOT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(458):  IF(BOOST_INCLUDEDIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(469):  IF(NOT Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(516):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(520):  SET(BOOST_VERSION 0 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(521):  SET(BOOST_LIB_VERSION  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(522):  FILE(READ ${Boost_INCLUDE_DIR}/boost/version.hpp _boost_VERSION_HPP_CONTENTS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(523):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(528):  STRING(REGEX REPLACE .*#define BOOST_VERSION ([0-9]+).* \\1 Boost_VERSION ${_boost_VERSION_HPP_CONTENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(529):  STRING(REGEX REPLACE .*#define BOOST_LIB_VERSION \"([0-9_]+)\".* \\1 Boost_LIB_VERSION ${_boost_VERSION_HPP_CONTENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(531):  SET(Boost_LIB_VERSION ${Boost_LIB_VERSION} CACHE INTERNAL The library version string for boost libraries )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(532):  SET(Boost_VERSION ${Boost_VERSION} CACHE INTERNAL The version number for boost libraries )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(534):  IF(NOT ${Boost_VERSION} STREQUAL 0 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(535):  MATH(EXPR Boost_MAJOR_VERSION ${Boost_VERSION} / 100000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(536):  MATH(EXPR Boost_MINOR_VERSION ${Boost_VERSION} / 100 % 1000 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(537):  MATH(EXPR Boost_SUBMINOR_VERSION ${Boost_VERSION} % 100 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(539):  set(Boost_ERROR_REASON ${Boost_ERROR_REASON}Boost version: ${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION}.${Boost_SUBMINOR_VERSION}\nBoost include path: ${Boost_INCLUDE_DIR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(542):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(557):  SET(Boost_LIB_PREFIX  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(558):  if(WIN32 AND Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(562):  if(Boost_COMPILER )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(573):  if(${CMAKE_CXX_COMPILER_ID} STREQUAL Intel OR ${CMAKE_CXX_COMPILER} MATCHES icl OR ${CMAKE_CXX_COMPILER} MATCHES icpc )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(605):  if(CMAKE_COMPILER_IS_GNUCXX )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(606):  if(${Boost_MAJOR_VERSION}.${Boost_MINOR_VERSION} VERSION_LESS 1.34 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(609):  _Boost_COMPILER_DUMPVERSION(_boost_COMPILER_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(257):  EXEC_PROGRAM(${CMAKE_CXX_COMPILER} ARGS ${CMAKE_CXX_COMPILER_ARG1} -dumpversion OUTPUT_VARIABLE _boost_COMPILER_VERSION )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(261):  STRING(REGEX REPLACE ([0-9])\\.([0-9])(\\.[0-9])? \\1\\2 _boost_COMPILER_VERSION ${_boost_COMPILER_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(264):  SET(${_OUTPUT_VERSION} ${_boost_COMPILER_VERSION} PARENT_SCOPE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(611):  IF(APPLE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(628):  SET(_boost_COMPILER -gcc${_boost_COMPILER_VERSION} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(633):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(639):  SET(_boost_MULTITHREADED -mt )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(640):  if(NOT Boost_USE_MULTITHREADED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(643):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(648):  SET(_boost_STATIC_TAG  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(649):  set(_boost_ABI_TAG  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(650):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(659):  SET(_boost_ABI_TAG ${_boost_ABI_TAG}d )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(660):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(671):  SET(_boost_LIBRARIES_SEARCH_DIRS ${Boost_INCLUDE_DIR}/lib ${Boost_INCLUDE_DIR}/../lib C:/boost/lib C:/boost $ENV{ProgramFiles}/boost/boost_${Boost_MAJOR_VERSION}_${Boost_MINOR_VERSION}_${Boost_SUBMINOR_VERSION}/lib $ENV{ProgramFiles}/boost/boost_${Boost_MAJOR_VERSION}_${Boost_MINOR_VERSION}/lib $ENV{ProgramFiles}/boost/lib $ENV{ProgramFiles}/boost /sw/local/lib )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(682):  IF(BOOST_ROOT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(689):  IF(BOOST_LIBRARYDIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(695):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(700):  FOREACH(COMPONENT ${Boost_FIND_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(701):  STRING(TOUPPER ${COMPONENT} UPPERCOMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(702):  SET(Boost_${UPPERCOMPONENT}_LIBRARY Boost_${UPPERCOMPONENT}_LIBRARY-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(703):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(704):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(707):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(708):  SET(_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(709):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(712):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(716):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(727):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}-${_boost_ABI_TAG} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(738):  _Boost_ADJUST_LIB_VARS(${UPPERCOMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_DATE_TIME_LIBRARY_DEBUG AND Boost_DATE_TIME_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_DATE_TIME_LIBRARY_RELEASE AND NOT Boost_DATE_TIME_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_DATE_TIME_LIBRARY_DEBUG ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_DATE_TIME_LIBRARY ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_DATE_TIME_LIBRARIES ${Boost_DATE_TIME_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_DATE_TIME_LIBRARY_DEBUG AND NOT Boost_DATE_TIME_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_DATE_TIME_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_DATE_TIME_LIBRARY ${Boost_DATE_TIME_LIBRARY} CACHE FILEPATH The Boost DATE_TIME library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_DATE_TIME_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_DATE_TIME_FOUND ON CACHE INTERNAL Whether the Boost DATE_TIME library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_DATE_TIME_LIBRARY Boost_DATE_TIME_LIBRARY_RELEASE Boost_DATE_TIME_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(739):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(740):  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(701):  STRING(TOUPPER ${COMPONENT} UPPERCOMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(702):  SET(Boost_${UPPERCOMPONENT}_LIBRARY Boost_${UPPERCOMPONENT}_LIBRARY-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(703):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(704):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(707):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(708):  SET(_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(709):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(712):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(716):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(727):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}-${_boost_ABI_TAG} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(738):  _Boost_ADJUST_LIB_VARS(${UPPERCOMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_FILESYSTEM_LIBRARY_DEBUG AND Boost_FILESYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_FILESYSTEM_LIBRARY_RELEASE AND NOT Boost_FILESYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_FILESYSTEM_LIBRARY_DEBUG ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_FILESYSTEM_LIBRARY ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_FILESYSTEM_LIBRARIES ${Boost_FILESYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_FILESYSTEM_LIBRARY_DEBUG AND NOT Boost_FILESYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_FILESYSTEM_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_FILESYSTEM_LIBRARY ${Boost_FILESYSTEM_LIBRARY} CACHE FILEPATH The Boost FILESYSTEM library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_FILESYSTEM_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_FILESYSTEM_FOUND ON CACHE INTERNAL Whether the Boost FILESYSTEM library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_FILESYSTEM_LIBRARY Boost_FILESYSTEM_LIBRARY_RELEASE Boost_FILESYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(739):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(740):  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(701):  STRING(TOUPPER ${COMPONENT} UPPERCOMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(702):  SET(Boost_${UPPERCOMPONENT}_LIBRARY Boost_${UPPERCOMPONENT}_LIBRARY-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(703):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(704):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(707):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(708):  SET(_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(709):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(712):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(716):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(727):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}-${_boost_ABI_TAG} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(738):  _Boost_ADJUST_LIB_VARS(${UPPERCOMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_SYSTEM_LIBRARY_DEBUG AND Boost_SYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_SYSTEM_LIBRARY_RELEASE AND NOT Boost_SYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(213):  SET(Boost_SYSTEM_LIBRARY_DEBUG ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(214):  SET(Boost_SYSTEM_LIBRARY ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(215):  SET(Boost_SYSTEM_LIBRARIES ${Boost_SYSTEM_LIBRARY_RELEASE} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_SYSTEM_LIBRARY_DEBUG AND NOT Boost_SYSTEM_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_SYSTEM_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(226):  set(Boost_SYSTEM_LIBRARY ${Boost_SYSTEM_LIBRARY} CACHE FILEPATH The Boost SYSTEM library )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(230):  FOREACH(_boost_my_lib ${Boost_SYSTEM_LIBRARY} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(231):  GET_FILENAME_COMPONENT(_boost_my_lib_path ${_boost_my_lib} PATH )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(232):  LIST(APPEND Boost_LIBRARY_DIRS ${_boost_my_lib_path} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(234):  LIST(REMOVE_DUPLICATES Boost_LIBRARY_DIRS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(236):  set(Boost_LIBRARY_DIRS ${Boost_LIBRARY_DIRS} CACHE FILEPATH Boost library directory )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(237):  SET(Boost_SYSTEM_FOUND ON CACHE INTERNAL Whether the Boost SYSTEM library found )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_SYSTEM_LIBRARY Boost_SYSTEM_LIBRARY_RELEASE Boost_SYSTEM_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(739):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(740):  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(701):  STRING(TOUPPER ${COMPONENT} UPPERCOMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(702):  SET(Boost_${UPPERCOMPONENT}_LIBRARY Boost_${UPPERCOMPONENT}_LIBRARY-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(703):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(704):  SET(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG-NOTFOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(707):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(708):  SET(_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(709):  IF(WIN32 )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(712):  SET(CMAKE_FIND_LIBRARY_SUFFIXES .a ${CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(716):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_RELEASE NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(727):  FIND_LIBRARY(Boost_${UPPERCOMPONENT}_LIBRARY_DEBUG NAMES ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_COMPILER}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG}-${Boost_LIB_VERSION} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}-${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}${_boost_MULTITHREADED}${_boost_STATIC_TAG}${_boost_ABI_TAG} ${Boost_LIB_PREFIX}boost_${COMPONENT}-${_boost_ABI_TAG} HINTS ${_boost_LIBRARIES_SEARCH_DIRS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(738):  _Boost_ADJUST_LIB_VARS(${UPPERCOMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(196):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(197):  IF(Boost_THREADS_LIBRARY_DEBUG AND Boost_THREADS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(212):  IF(Boost_THREADS_LIBRARY_RELEASE AND NOT Boost_THREADS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(219):  IF(Boost_THREADS_LIBRARY_DEBUG AND NOT Boost_THREADS_LIBRARY_RELEASE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(225):  IF(Boost_THREADS_LIBRARY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(242):  MARK_AS_ADVANCED(Boost_THREADS_LIBRARY Boost_THREADS_LIBRARY_RELEASE Boost_THREADS_LIBRARY_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(739):  IF(Boost_USE_STATIC_LIBS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(740):  SET(CMAKE_FIND_LIBRARY_SUFFIXES ${_boost_ORIG_CMAKE_FIND_LIBRARY_SUFFIXES} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(747):  SET(Boost_INCLUDE_DIRS ${Boost_INCLUDE_DIR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(751):  SET(Boost_FOUND FALSE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(752):  IF(Boost_INCLUDE_DIR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(753):  SET(Boost_FOUND TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(756):  if(Boost_FIND_VERSION AND NOT Boost_FIND_VERSION_MINOR )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(759):  if(Boost_MAJOR_VERSION LESS ${Boost_FIND_VERSION_MAJOR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(763):  if(Boost_MINOR_VERSION LESS ${Boost_FIND_VERSION_MINOR} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(767):  if(Boost_FIND_VERSION_PATCH AND Boost_SUBMINOR_VERSION LESS ${Boost_FIND_VERSION_PATCH} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(774):  if(NOT Boost_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(778):  if(Boost_FOUND AND Boost_FIND_VERSION_EXACT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(802):  if(NOT Boost_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(817):  set(_boost_CHECKED_COMPONENT FALSE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(818):  set(_Boost_MISSING_COMPONENTS  )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(819):  foreach(COMPONENT ${Boost_FIND_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(820):  string(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(821):  set(_boost_CHECKED_COMPONENT TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(822):  if(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(820):  string(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(821):  set(_boost_CHECKED_COMPONENT TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(822):  if(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(820):  string(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(821):  set(_boost_CHECKED_COMPONENT TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(822):  if(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(820):  string(TOUPPER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(821):  set(_boost_CHECKED_COMPONENT TRUE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(822):  if(NOT Boost_${COMPONENT}_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(823):  string(TOLOWER ${COMPONENT} COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(824):  list(APPEND _Boost_MISSING_COMPONENTS ${COMPONENT} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(825):  set(Boost_FOUND FALSE )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(829):  if(Boost_DEBUG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(833):  if(_Boost_MISSING_COMPONENTS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(836):  set(Boost_ERROR_REASON ${Boost_ERROR_REASON}\nThe following Boost libraries could not be found:\n )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(838):  foreach(COMPONENT ${_Boost_MISSING_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(839):  set(Boost_ERROR_REASON ${Boost_ERROR_REASON}        boost_${COMPONENT}\n )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(843):  list(LENGTH Boost_FIND_COMPONENTS Boost_NUM_COMPONENTS_WANTED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(844):  list(LENGTH _Boost_MISSING_COMPONENTS Boost_NUM_MISSING_COMPONENTS )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(845):  if(${Boost_NUM_COMPONENTS_WANTED} EQUAL ${Boost_NUM_MISSING_COMPONENTS} )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(849):  set(Boost_ERROR_REASON ${Boost_ERROR_REASON}Some (but not all) of the required Boost libraries were found. You may need to install these additional Boost libraries. Alternatively, set Boost_LIBRARYDIR to the directory containing Boost libraries or BOOST_ROOT to the location of Boost. )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(854):  IF(NOT Boost_LIBRARY_DIRS AND NOT _boost_CHECKED_COMPONENT )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(892):  IF(Boost_FOUND )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(909):  if(Boost_FIND_REQUIRED )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(912):  if(NOT Boost_FIND_QUIETLY )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(917):  if(Boost_DEBUG OR Boost_DETAILED_FAILURE_MSG )
/usr/share/cmake-2.8/Modules/FindBoost.cmake(920):  message(STATUS Could NOT find Boost )
-- Could NOT find Boost
/usr/share/cmake-2.8/Modules/FindBoost.cmake(927):  MARK_AS_ADVANCED(Boost_INCLUDE_DIR Boost_INCLUDE_DIRS Boost_LIBRARY_DIRS )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(8):  include_directories(/home/mdupont/OSM-API-Proxy/lib/todo/db-5.2.36/build_unix/ /opt/hypertable/0.9.5.0/include/ ${Boost_INCLUDE_DIRS} )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(9):  link_directories(/opt/hypertable/0.9.5.0/lib/ )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(10):  add_executable(testclient testclient.cpp )
/home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient/CMakeLists.txt(12):  target_link_libraries(testclient Hypertable HyperComm HyperCommon HyperDfsBroker HyperDfsCmds HyperMaster HyperRanger HyperTools Hyperspace db-5.2 db_cxx-5.2 db_stl-5.2 ${Boost_FILESYSTEM_LIBRARY} ${Boost_SYSTEM_LIBRARY} ${Boost_THREAD_LIBRARY} ${Boost_LIBRARIES} )
-- Configuring done
-- Generating done
-- Build files have been written to: /home/mdupont/OSM-API-Proxy/lib/todo/hypertable/testclient
